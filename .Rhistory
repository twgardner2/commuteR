?shiny::reactivePoll
rsconnect::deployApp("C:\\Users\\thomas.gardner\\Documents\\R\\commuteR")
# Load 2018 Tracker ----
tracker <- gs_url(
x      = "https://docs.google.com/spreadsheets/d/11JAREyf0pTdR0d0b_DXDjOsI8P5L2WH_P31ALfqtSXI/edit?usp=sharing",
lookup = TRUE
)
library("googlesheets")
library("ggplot2")
suppressPackageStartupMessages(library("dplyr"))
library("lubridate")
library("shinydashboard")
library("shiny")
library("tidyverse")
# Load 2018 Tracker ----
tracker <- gs_url(
x      = "https://docs.google.com/spreadsheets/d/11JAREyf0pTdR0d0b_DXDjOsI8P5L2WH_P31ALfqtSXI/edit?usp=sharing",
lookup = TRUE
)
shiny::runApp()
runApp()
runApp()
install.packages("DT")
runApp()
?DT::formatDate
runApp()
runApp()
View(commute)
# Load 2018 Tracker ----
tracker <- gs_url(
x      = "https://docs.google.com/spreadsheets/d/11JAREyf0pTdR0d0b_DXDjOsI8P5L2WH_P31ALfqtSXI/edit?usp=sharing",
lookup = TRUE
)
# Read 'commute' tab (ws = 2) ----
commuteRaw <- gs_read(
ss = tracker,
ws = 2,
range = cell_cols('A:T'),
col_types = cols(date                   = col_date(format = "%y-%m-%d"),
alarm                  = 't',
departHouse            = 't',
arrivePlatform_Morning = 't',
route_Morning          = 'c',
mpg_Morning            = 'd',
score_Morning          = 'i',
trainNum_Morning       = 'c',
trainDepart_Morning    = 't',
trainArrive_Morning    = 't',
arriveWork             = 't',
departWork             = 't',
trainNum_Evening       = 'c',
arrivePlatform_Evening = 't',
trainDepart_Evening    = 't',
carDepart_Evening      = 't',
arriveHome             = "t",
route_Evening          = 'c',
mpg_Evening            = 'd',
score_Evening          = 'i')
)
# Remove future rows ----
commuteRaw <- commuteRaw %>% filter(date < Sys.Date())
View(commuteRaw)
# Read 'commute' tab (ws = 2) ----
commuteRaw <- gs_read(
ss = tracker,
ws = 2,
range = cell_cols('A:T'),
col_types = cols(date                   = col_date(format = "%y-%m-%d"),
alarm                  = 't',
departHouse            = 't',
arrivePlatform_Morning = 't',
route_Morning          = 'c',
mpg_Morning            = 'd',
score_Morning          = 'i',
trainNum_Morning       = 'c',
trainDepart_Morning    = 't',
trainArrive_Morning    = 't',
arriveWork             = 't',
departWork             = 't',
trainNum_Evening       = 'c',
arrivePlatform_Evening = 't',
trainDepart_Evening    = 't',
carDepart_Evening      = 't',
arriveHome             = "t",
route_Evening          = 'c',
mpg_Evening            = 'd',
score_Evening          = 'i')
)
# Remove future rows ----
commuteRaw <- commuteRaw %>% filter(date <= Sys.Date())
View(commuteRaw)
# Convert times to POSIXct ----
commute <- commuteRaw %>% mutate(alarm               = as.POSIXct(alarm, format="%H:%M"),
arriveHome             = as.POSIXct(arriveHome, format="%H:%M"),
arrivePlatform_Morning = as.POSIXct(arrivePlatform_Morning, format="%H:%M"),
arriveWork             = as.POSIXct(arriveWork, format="%H:%M"),
carDepart_Evening      = as.POSIXct(carDepart_Evening, format="%H:%M"),
departHouse            = as.POSIXct(departHouse, format="%H:%M"),
departWork             = as.POSIXct(departWork, format="%H:%M"),
arrivePlatform_Evening = as.POSIXct(arrivePlatform_Evening, format="%H:%M"),
trainArrive_Morning    = as.POSIXct(trainArrive_Morning, format="%H:%M"),
trainDepart_Evening    = as.POSIXct(trainDepart_Evening, format="%H:%M"),
trainDepart_Morning    = as.POSIXct(trainDepart_Morning, format="%H:%M"))
# Compute fields ----
commute <- commute %>% mutate(totalCommute_Morning = arriveWork - departHouse,
totalCommute_Evening = arriveHome - departWork,
totalGoneForDay      = arriveHome - departHouse,
totalDriveHome       = arriveHome - carDepart_Evening)
runApp()
?as.POSIXct
runApp()
runApp()
Sys.timezone()
runApp()
runApp()
commute %>% filter(!is.na(totalDriveHome))
commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome)
commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome))
commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist()
commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() %>% as.POSIXct()
?as.POSIXct
commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() %>% as.POSIXct(origin=0)
commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() %>% as.POSIXct(origin="1970-01-01 00:00:00")
commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist()
commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() * 60
runApp()
commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() * 60
commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist()
runApp()
averageDriveHome <- commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() * 60 #%>% as.POSIXct(origin="1970-01-01 00:00:00")
averageDriveHome <- commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() * 60 %>%
unname()
?unname
averageDriveHome
unname(averageDriveHome)
runApp()
commute$carDepart_Evening[1]
commute$carDepart_Evening[1] + averageDriveHome
runApp()
data() %>% filter(!is.na(arriveHome)) %>%
group_by(trainNum_Evening) %>%
summarize(result = mean(arriveHome))
runApp()
averageDriveHome
runApp()
?strptime
shiny::runApp()
# Load 2018 Tracker, Daily Times sheet----
tracker <- gs_url(
x = "https://docs.google.com/spreadsheets/d/11JAREyf0pTdR0d0b_DXDjOsI8P5L2WH_P31ALfqtSXI/edit?usp=sharing",
lookup = TRUE
)
# Convert times to POSIXct ----
commute <- commuteRaw %>% mutate(alarm               = as.POSIXct(alarm, format="%H:%M"),
arriveHome             = as.POSIXct(arriveHome, format="%H:%M"),
arrivePlatform_Morning = as.POSIXct(arrivePlatform_Morning, format="%H:%M"),
arriveWork             = as.POSIXct(arriveWork, format="%H:%M"),
carDepart_Evening      = as.POSIXct(carDepart_Evening, format="%H:%M"),
departHouse            = as.POSIXct(departHouse, format="%H:%M"),
departWork             = as.POSIXct(departWork, format="%H:%M"),
arrivePlatform_Evening = as.POSIXct(arrivePlatform_Evening, format="%H:%M"),
trainArrive_Morning    = as.POSIXct(trainArrive_Morning, format="%H:%M"),
trainDepart_Evening    = as.POSIXct(trainDepart_Evening, format="%H:%M"),
trainDepart_Morning    = as.POSIXct(trainDepart_Morning, format="%H:%M"))
commute <- commute %>% mutate(totalCommute_Morning = arriveWork - departHouse,
totalCommute_Evening = arriveHome - departWork,
totalGoneForDay      = arriveHome - departHouse)
if(TRUE) {
averageDriveHome <- commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() *60 #%>% as.POSIXct(origin="1970-01-01 00:00:00")
commuteImputed <- commute %>% mutate(arriveHome = ifelse((is.na(arriveHome) & !is.na(carDepart_Evening)),
as.POSIXct(carDepart_Evening + averageDriveHome),
arriveHome))
print(commuteImputed %>% select(arriveHome))
return(commuteImputed)
} else {
return(commute)
}
commute <- commute %>% mutate(totalCommute_Morning = arriveWork - departHouse,
totalCommute_Evening = arriveHome - departWork,
totalGoneForDay      = arriveHome - departHouse,
totalDriveHome       = arriveHome - carDepart_Evening)
if(TRUE) {
averageDriveHome <- commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() *60 #%>% as.POSIXct(origin="1970-01-01 00:00:00")
commuteImputed <- commute %>% mutate(arriveHome = ifelse((is.na(arriveHome) & !is.na(carDepart_Evening)),
as.POSIXct(carDepart_Evening + averageDriveHome),
arriveHome))
print(commuteImputed %>% select(arriveHome))
return(commuteImputed)
} else {
return(commute)
}
if(TRUE) {
averageDriveHome <- commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() *60 #%>% as.POSIXct(origin="1970-01-01 00:00:00")
commuteImputed <- commute %>% mutate(arriveHome = ifelse((is.na(arriveHome) & !is.na(carDepart_Evening)),
as.POSIXct(carDepart_Evening + averageDriveHome),
arriveHome))
print(commuteImputed %>% select(arriveHome))
print(commuteImputed)
} else {
print(commute)
}
if(TRUE) {
averageDriveHome <- commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() *60 #%>% as.POSIXct(origin="1970-01-01 00:00:00")
commuteImputed <- commute %>% mutate(arriveHomeImp = ifelse((is.na(arriveHome) & !is.na(carDepart_Evening)),
as.POSIXct(carDepart_Evening + averageDriveHome),
arriveHome))
print(commuteImputed %>% select(arriveHome, arriveHomeImp))
print(commuteImputed)
} else {
print(commute)
}
if(TRUE) {
averageDriveHome <- commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() *60 #%>% as.POSIXct(origin="1970-01-01 00:00:00")
commuteImputed <- commute %>% mutate(arriveHomeImp = ifelse((is.na(arriveHome) & !is.na(carDepart_Evening)),
as.POSIXct(carDepart_Evening + averageDriveHome),
arriveHome))
print(commuteImputed %>% select(departCar_Evening, arriveHome, arriveHomeImp))
print(commuteImputed)
} else {
print(commute)
}
print(commuteImputed %>% select(carDepart_Evening, arriveHome, arriveHomeImp))
print(commuteImputed %>% select(trainNum_Evening, carDepart_Evening, arriveHome, arriveHomeImp))
(commuteImputed %>% select(trainNum_Evening, carDepart_Evening, arriveHome, arriveHomeImp))
(commuteImputed)
(commuteImputed %>% select(trainNum_Evening, carDepart_Evening, arriveHome, arriveHomeImp))
if(TRUE) {
averageDriveHome <- commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() *60 #%>% as.POSIXct(origin="1970-01-01 00:00:00")
commuteImputed <- commute %>% mutate(arriveHomeImp = ifelse((is.na(arriveHome) & !is.na(carDepart_Evening)),
as.POSIXct(carDepart_Evening + averageDriveHome, origin="1970-01-01"),
arriveHome))
(commuteImputed %>% select(trainNum_Evening, carDepart_Evening, arriveHome, arriveHomeImp))
(commuteImputed)
} else {
print(commute)
}
(commuteImputed %>% select(trainNum_Evening, carDepart_Evening, arriveHome, arriveHomeImp))
commuteImputed <- commute %>% mutate(arriveHomeImp = ifelse((is.na(arriveHome) & !is.na(carDepart_Evening)),
as.POSIXct(carDepart_Evening + averageDriveHome, origin="1970-01-01"),
arriveHome))
if(TRUE) {
averageDriveHome <- commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() *60 #%>% as.POSIXct(origin="1970-01-01 00:00:00")
commuteImputed <- commute %>% mutate(arriveHomeImp = ifelse((is.na(arriveHome) & !is.na(carDepart_Evening)),
as.POSIXct(carDepart_Evening + averageDriveHome, origin="1970-01-01", tz="America/New_York"),
arriveHome))
(commuteImputed %>% select(trainNum_Evening, carDepart_Evening, arriveHome, arriveHomeImp))
(commuteImputed)
} else {
print(commute)
}
(commuteImputed %>% select(trainNum_Evening, carDepart_Evening, arriveHome, arriveHomeImp))
commuteImputed <- commute %>% mutate(arriveHomeImp = ifelse((is.na(arriveHome) & !is.na(carDepart_Evening)),
as.POSIXct.numeric(carDepart_Evening + averageDriveHome, origin="1970-01-01", tz="America/New_York"),
arriveHome))
if(TRUE) {
averageDriveHome <- commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() *60 #%>% as.POSIXct(origin="1970-01-01 00:00:00")
commuteImputed <- commute %>% mutate(arriveHomeImp = ifelse((is.na(arriveHome) & !is.na(carDepart_Evening)),
as.POSIXct.numeric(carDepart_Evening + averageDriveHome, origin="1970-01-01", tz="America/New_York"),
arriveHome))
(commuteImputed %>% select(trainNum_Evening, carDepart_Evening, arriveHome, arriveHomeImp))
(commuteImputed)
} else {
print(commute)
}
as.POSIXct.numeric(69660, tz="America/New_York", origin="1970-01-01")
carDepart_Evening[1] + averageDriveHome
commute$carDepart_Evening[1] + averageDriveHome
commute$carDepart_Evening[1]
averageDriveHome <- commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() * 60 %>%
unname() %>%
as.POSIXct(origin="1970-01-01 00:00:00")
averageDriveHome <- commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() %>%
unname() %>%
as.POSIXct(origin="1970-01-01 00:00:00")
averageDriveHome
commute$carDepart_Evening[1] + averageDriveHome
class(averageDriveHome)
class(commute$carDepart_Evening[1])
as.POSIXct.numeric(69660, tz="America/New_York", origin="1970-01-01")
as.POSIXct.numeric(69660, origin="1970-01-01")
as.POSIXct.numeric(3600, origin="1970-01-01")
as.POSIXct.numeric(69660, origin="1970-01-01")
as.POSIXct.numeric(3600, origin="1970-01-01")
as.POSIXct.numeric(3600*15, origin="1970-01-01")
as.POSIXct.numeric(3600, origin="1970-01-01")
as.POSIXct.numeric(3600*15, origin="1970-01-01") + 3600
as.POSIXct.numeric(3600*15, origin="1970-01-01")
as.POSIXct.numeric(3600*15, origin="1970-01-01") + 3600
commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() %>%
unname() %>%
as.POSIXct(origin="1970-01-01 00:00:00")
commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() %>%
unname()
commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome))
commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome)
commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>% typeof()
commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome)
summarize(mean(totalDriveHome)) %>%
unlist()
commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome)
commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome)
summarize(mean(totalDriveHome))
# Load 2018 Tracker, Daily Times sheet----
tracker <- gs_url(
x = "https://docs.google.com/spreadsheets/d/11JAREyf0pTdR0d0b_DXDjOsI8P5L2WH_P31ALfqtSXI/edit?usp=sharing",
lookup = TRUE
)
# Read 'Daily Times' tab (ws = 2)----
commuteRaw <- gs_read(
ss = tracker,
ws = 2,
range = cell_cols('A:T'),
col_types = cols(date                   = col_date(format = "%y-%m-%d"),
alarm                  = 't',
departHouse            = 't',
arrivePlatform_Morning = 't',
route_Morning          = 'c',
mpg_Morning            = 'd',
score_Morning          = 'i',
trainNum_Morning       = 'c',
trainDepart_Morning    = 't',
trainArrive_Morning    = 't',
arriveWork             = 't',
departWork             = 't',
trainNum_Evening       = 'c',
arrivePlatform_Evening = 't',
trainDepart_Evening    = 't',
carDepart_Evening      = 't',
arriveHome             = "t",
route_Evening          = 'c',
mpg_Evening            = 'd',
score_Evening          = 'i')
)
# Remove future rows----
commuteRaw <- commuteRaw %>% filter(date < Sys.Date())
# Convert times to POSIXct ----
commute <- commuteRaw %>% mutate(alarm               = as.POSIXct(alarm, format="%H:%M"),
arriveHome             = as.POSIXct(arriveHome, format="%H:%M"),
arrivePlatform_Morning = as.POSIXct(arrivePlatform_Morning, format="%H:%M"),
arriveWork             = as.POSIXct(arriveWork, format="%H:%M"),
carDepart_Evening      = as.POSIXct(carDepart_Evening, format="%H:%M"),
departHouse            = as.POSIXct(departHouse, format="%H:%M"),
departWork             = as.POSIXct(departWork, format="%H:%M"),
arrivePlatform_Evening = as.POSIXct(arrivePlatform_Evening, format="%H:%M"),
trainArrive_Morning    = as.POSIXct(trainArrive_Morning, format="%H:%M"),
trainDepart_Evening    = as.POSIXct(trainDepart_Evening, format="%H:%M"),
trainDepart_Morning    = as.POSIXct(trainDepart_Morning, format="%H:%M"))
commute <- commute %>% mutate(totalCommute_Morning = arriveWork - departHouse,
totalCommute_Evening = arriveHome - departWork,
totalGoneForDay      = arriveHome - departHouse,
totalDriveHome       = arriveHome - carDepart_Evening)
commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome))
commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>% class()
commute$carDepart_Evening[1] + averageDriveHome
averageDriveHome <- commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>% class()
averageDriveHome
averageDriveHome <- commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome))
averageDriveHome
averageDriveHome <- commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome))
unlist() %>%
unname() %>%
as.integer()
averageDriveHome <- commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() %>%
unname() %>%
as.integer()
averageDriveHome
averageDriveHome <- commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() %>%
unname() %>%
as.double()
averageDriveHome
?add_count
?`+`
averageDriveHomeSec <- commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() %>%
unname() %>%
as.double() * 60
averageDriveHomeSec
commute$carDepart_Evening[1]
averageDriveHome
commute$carDepart_Evening[1] + averageDriveHome
averageDriveHomeSec <- commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() %>%
unname() %>%
as.double() * 60
commute$carDepart_Evening[1] + averageDriveHome
averageDriveHome
commute %>% filter(!is.na(totalDriveHome)) %>%
select(totalDriveHome) %>%
summarize(mean(totalDriveHome)) %>%
unlist() %>%
unname() %>%
as.double() * 60
commute$carDepart_Evening[1] + averageDriveHomeSec
commuteImputed <- commute %>% mutate(arriveHomeImp = ifelse((is.na(arriveHome) & !is.na(carDepart_Evening)),
carDepart_Evening + averageDriveHomeSec,
arriveHome))
(commuteImputed %>% select(trainNum_Evening, carDepart_Evening, arriveHome, arriveHomeImp))
commute$carDepart_Evening[1] + averageDriveHomeSec
commuteImputed <- commute %>% mutate(arriveHomeImp = dplyr::if_else((is.na(arriveHome) & !is.na(carDepart_Evening)),
carDepart_Evening + averageDriveHomeSec,
arriveHome))
(commuteImputed %>% select(trainNum_Evening, carDepart_Evening, arriveHome, arriveHomeImp))
sessionInfo()
runApp()
?sidebarMenu
styler:::style_active_file()
runApp()
runApp()
rsconnect::deployApp("C:\\Users\\thomas.gardner\\Documents\\R\\commuteR")
shiny::runApp()
runApp()
?formatDate
runApp()
runApp()
styler:::style_selection()
runApp()
